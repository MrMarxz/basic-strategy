@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes diagonalMoveTopLeft {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(-45vw, -100%); /* Adjust as needed */
    }
}

@keyframes diagonalMoveTopRight {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(100px, -100px); /* Adjust as needed */
    }
}

@keyframes diagonalMoveBottomLeft {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(-45vw, 100%);
    }
}

@keyframes diagonalMoveBottomRight {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(100px, 100px); /* Adjust as needed */
    }
}

.diagonal-top-left {
    animation: diagonalMoveTopLeft 1s ease-in-out infinite;
}

.diagonal-top-right {
    animation: diagonalMoveTopRight 2s ease-in-out infinite alternate;
}

.diagonal-bottom-left {
    animation: diagonalMoveBottomLeft 1s ease-in-out infinite;
}

.diagonal-bottom-right {
    animation: diagonalMoveBottomRight 2s ease-in-out infinite alternate;
}


/* CARD FLIPPING FROM FRONT TO BACK STYLING */
.card-container {
    perspective: 1000px; /* Depth of the flip effect */
  }
  
  .card {
    width: 100px; /* Adjust the size as needed */
    height: 150px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.6s;
  }
  
  .card-front,
  .card-back {
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
  }
  
  .card-front {
    /* Front side styling */
  }
  
  .card-back {
    /* Back side styling */
    transform: rotateY(180deg); /* Flip the back side */
  }
  
  .flipped {
    transform: rotateY(180deg); /* Rotate the card to show the back */
  }
